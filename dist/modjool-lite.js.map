{"version":3,"file":"modjool-lite.js","sources":["../src/modjool/whenready.js","../src/modjool/create.js","../src/modjool/modjoolLite.js"],"sourcesContent":["/**\r\n * Runs func when the entire DOM has loaded\r\n * @param {Function} func - The function to be run\r\n */\r\nexport default function (func) {\r\n  if (document.readyState === 'interactive' || document.readyState === 'complete') {\r\n    func()\r\n  } else {\r\n    document.addEventListener('DOMContentLoaded', () => {\r\n      func()\r\n    })\r\n  }\r\n}\r\n","import whenReady from './whenready.js'\r\n/**\r\n * Defines or creates custom element classes from createElement function.\r\n *\r\n * If define === true:\r\n *   Create and define custom elements\r\n *   Return result (options object or array of option objects used for Modjool definition)\r\n *\r\n * If define === false:\r\n *   Create custom element classes, but do not define\r\n *   Return result (class or array of classes to be used for custom element definition)\r\n *\r\n * Execution process:\r\n *   1. If options not passed, define all elements not currently defined, return true\r\n *   2. If array passed, define all elements, return array of results\r\n *   3. Else, create single element, if successful, return result\r\n *   4. Return false if problem\r\n *\r\n * @param {Function} createElement - Function to build ModjoolElement or ModjoolLiteElement\r\n * @param {Object|Array|String} options - Options provided by modjool.create()\r\n * @param {Boolean} define - Will define element, and return options if true\r\n * @returns {Object|Class|Array<Object|Class>|Boolean} - See above. All 3 processes return false if failed\r\n */\r\nexport default function (createElement, options = [], define = true) {\r\n  options = options.length === 1 ? options[0] : options\r\n  if (Array.isArray(options)) {\r\n    if (options.length === 0) {\r\n      whenReady(() => defineAll(createElement))\r\n      return true\r\n    }\r\n    const result = []\r\n    for (const option of options) {\r\n      result.push(createSingle(createElement, option, define))\r\n    }\r\n    const allSuccessful = result.every(res => res !== false)\r\n    return allSuccessful ? result : false\r\n  } else {\r\n    return createSingle(createElement, options, define)\r\n  }\r\n}\r\n\r\n/**\r\n * Creates a single ModjoolElement or ModjoolLiteElement. If a string is passed as options,\r\n * send false to createElement(), to denote a simple API call. If define === true,\r\n * returns the class instead of defining and returning options.\r\n * @param {Function} createElement - Function to build ModjoolElement or ModjoolLiteElement\r\n * @param {Object|String} options - Options provided by modjool.create()\r\n * @param {Boolean} define - Will define element, and return options if true\r\n * @returns {Object|Class|false} - True if successful, false if not\r\n */\r\nfunction createSingle (createElement, options, define = true) {\r\n  const isString = typeof options === 'string' || options instanceof String\r\n  const customElement = createElement(options, !isString)\r\n  if (define !== true) {\r\n    return customElement.class || false\r\n  }\r\n  try {\r\n    customElements.define(customElement.tag, customElement.class)\r\n  } catch (err) {\r\n    console.error(err)\r\n  }\r\n  return customElements.get(customElement.tag) ? customElement.options : false\r\n}\r\n\r\n/**\r\n * Finds all non-defined custom elements, and defines them using createSingle()\r\n * @param {Function} createElement - Function to build ModjoolElement or ModjoolLiteElement\r\n * @returns {Array} - List of all successfully defined custom element options objects\r\n */\r\nfunction defineAll(createElement) {\r\n  const notDefined = document.querySelectorAll(':not(:defined)')\r\n  const list = []\r\n  for (const el of notDefined) {\r\n    if (!list.includes(el.tagName)) {\r\n      createSingle(createElement, el.tagName.toLowerCase() || el.nodeName.toLowerCase() ||el.localName)\r\n      list.push(el.tagName)\r\n    }\r\n  }\r\n  return list\r\n}\r\n","/* global customElements, HTMLElement */\r\nimport createElement from './create.js'\r\n\r\nexport default { create }\r\n\r\n/**\r\n * Creates one or more ModjoolLite elements, using the ModjoolLite API\r\n * @param  {...Array|String} options - One of two inputs:\r\n *   1. An array of strings for the simple API\r\n *   2. A single string for the simple API\r\n * @returns {Boolean} - True if successful, false if not\r\n */\r\nfunction create (...options) {\r\n  return createElement(modjoolLiteElement, options)    \r\n}\r\n\r\n/**\r\n * Creates and defines a ModjoolLite element\r\n * @param {String} elementName - The tag of the custom element\r\n * @returns {Object} - The defined class, tag, and options\r\n */\r\nfunction modjoolLiteElement (elementName) {\r\n  // noinspection JSUnusedLocalSymbols\r\n  class ModjoolLiteElement extends HTMLElement {\r\n    constructor (...args) {\r\n      // noinspection all\r\n      return super(...args)\r\n    }\r\n  }\r\n  return {\r\n    tag: elementName,\r\n    options: elementName,\r\n    class: ModjoolLiteElement\r\n  }\r\n}\r\n"],"names":["func","document","readyState","addEventListener","createElement","options","define","length","Array","isArray","whenReady","defineAll","result","option","push","createSingle","allSuccessful","every","res","isString","String","customElement","class","customElements","tag","err","console","error","get","list","querySelectorAll","el","includes","tagName","toLowerCase","nodeName","localName","modjoolLiteElement","elementName","ModjoolLiteElement","HTMLElement","constructor","super","create"],"mappings":"4/BAIe,WAAUA,GACK,gBAAxBC,SAASC,YAAwD,aAAxBD,SAASC,WACpDF,IAEAC,SAASE,iBAAiB,mBAAoB,KAC5CH,MCcS,WAAUI,OAAeC,yDAAU,GAAIC,gEACpDD,EAA6B,IAAnBA,EAAQE,OAAeF,EAAQ,GAAKA,EAC1CG,MAAMC,QAAQJ,GAAU,IACH,IAAnBA,EAAQE,cACVG,EAAU,IAAMC,EAAUP,KACnB,QAEHQ,EAAS,OACMP,kCAAS,KAAnBQ,UACTD,EAAOE,KAAKC,EAAaX,EAAeS,EAAQP,uCAE5CU,EAAgBJ,EAAOK,MAAMC,IAAe,IAARA,WACnCF,GAAgBJ,SAEhBG,EAAaX,EAAeC,EAASC,GAahD,SAASS,EAAcX,EAAeC,OAASC,6DACvCa,EAA8B,iBAAZd,GAAwBA,aAAmBe,OAC7DC,EAAgBjB,EAAcC,GAAUc,OAC/B,IAAXb,SACKe,EAAcC,QAAS,MAG9BC,eAAejB,OAAOe,EAAcG,IAAKH,EAAcC,OACvD,MAAOG,GACPC,QAAQC,MAAMF,WAETF,eAAeK,IAAIP,EAAcG,MAAOH,EAAchB,QAQ/D,SAASM,EAAUP,SAEXyB,EAAO,OADM5B,SAAS6B,iBAAiB,kDAEhB,KAAlBC,UACJF,EAAKG,SAASD,EAAGE,WACpBlB,EAAaX,EAAe2B,EAAGE,QAAQC,eAAiBH,EAAGI,SAASD,eAAgBH,EAAGK,WACvFP,EAAKf,KAAKiB,EAAGE,gDAGVJ,ECzDT,SAASQ,EAAoBC,SAErBC,UAA2BC,YAC/BC,qBAESC,2BAGJ,CACLlB,IAAKc,EACLjC,QAASiC,EACThB,MAAOiB,SA7BI,CAAEI,OASjB,sCAAoBtC,2BAAAA,yBACXD,EAAciC,EAAoBhC"}